/* Global SCSS Mixins */

// Responsive Breakpoints
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) { @content; }
  }
  @if $breakpoint == xxl {
    @media (min-width: #{$breakpoint-xxl}) { @content; }
  }
}

// Button Base Styles
@mixin button-base {
  font-family: $font-body;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: clamp(12px, 2.5vw, 15px) clamp(24px, 5vw, 30px);
  border-radius: clamp(6px, 1.5vw, 8px);
  font-weight: $font-weight-semibold;
  font-size: clamp(0.875rem, 2vw, 1rem);
  cursor: pointer;
  transition: $transition-normal;
  border: none;
  outline: none;
  text-decoration: none;
  line-height: $line-height-normal;
  letter-spacing: $letter-spacing-wide;
  min-height: $touch-target-min;
  touch-action: manipulation;
}

// Service Button Mixin
@mixin service-button {
  font-family: $font-body;
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 12px 28px;
  background: transparent;
  border: 2px solid $color-primary;
  border-radius: 30px;
  color: $color-primary;
  font-weight: $font-weight-semibold;
  font-size: $font-size-sm;
  cursor: pointer;
  overflow: hidden;
  transition: all 0.3s ease;
  z-index: 1;
  text-decoration: none;
  min-height: 44px;
  letter-spacing: $letter-spacing-wide;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, $color-primary, $color-secondary);
    opacity: 0;
    transform: translateX(-100%) rotate(10deg);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: -1;
  }

  &:hover {
    color: #ffffff;
    border-color: $color-primary;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 86, 210, 0.3);
    text-decoration: none;

    &::before {
      opacity: 1;
      transform: translateX(0) rotate(0deg);
    }
  }

  &:active {
    transform: translateY(0);
    box-shadow: 0 2px 8px rgba(0, 86, 210, 0.3);
  }
}

// Icon Container Mixin
@mixin icon-container($size: md, $variant: primary) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: $border-radius-md;
  transition: all 0.2s ease;

  @if $size == sm {
    width: 40px;
    height: 40px;
    padding: 4px;
  } @else if $size == md {
    width: 48px;
    height: 48px;
    padding: 8px;
  } @else if $size == lg {
    width: 64px;
    height: 64px;
    padding: 12px;
  } @else if $size == xl {
    width: 80px;
    height: 80px;
    padding: 16px;
  }

  @if $variant == primary {
    background: rgba(0, 86, 210, 0.1);
    color: $color-primary;
    border: 2px solid rgba(0, 86, 210, 0.2);

    &:hover {
      background: $color-primary;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 86, 210, 0.3);
    }
  } @else if $variant == secondary {
    background: rgba(102, 161, 231, 0.1);
    color: $color-secondary;
    border: 2px solid rgba(102, 161, 231, 0.2);

    &:hover {
      background: $color-secondary;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(102, 161, 231, 0.3);
    }
  } @else if $variant == white {
    background: white;
    color: $color-primary;
    border: 2px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);

    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    }
  }
}

// Card Mixin
@mixin card-base {
  background: white;
  border-radius: $border-radius-lg;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  transition: $transition-normal;

  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
}

// Section Padding Mixin
@mixin section-padding {
  padding: clamp(60px, 12vh, 100px) 0;
}

// Container Mixin
@mixin container {
  width: 100%;
  max-width: $container-xl;
  margin: 0 auto;
  padding: 0 clamp(16px, 4vw, 32px);
}

// Flex Center Mixin
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Absolute Center Mixin
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Visually Hidden Mixin
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Truncate Text Mixin
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Clearfix Mixin
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}